@page "/Editor"
@using BlazorApp.Client.Pages
@using BlazorApp.Client.Components

<div id="mainDiv" class="d-flex justify-content-center align-items-center min-vh-100 bg-light">
    <div id="subdiv" class="w-100 d-flex flex-column border rounded-3 shadow-sm p-4 bg-white" style="max-width: 900px; height: 98vh;">
        <Toolbar OnRun="@HandleRun" OnSave="@HandleSave" OnLoad="@HandleLoad" CanSave="@CanSave" />

        <div class="row gx-2 mt-2 flex-grow-1">

            <!-- Components Panel -->
            <div class="col-12 col-md-3 p-2 components-mobile-panel">
                <div class="h-100 border rounded-3 p-3 bg-light d-flex flex-column">
                    <div class="text-center text-muted small fw-semibold mb-3">Components</div>
                    <div class="flex-grow-1 overflow-auto">
                        <ComponentsPanel AvailableControls="@availableControls" />
                    </div>
                </div>
            </div>

            <!-- Canvas Panel -->
            <div class="col-12 col-md-6 p-2 canvas-mobile-panel">
                <div class="h-100 border rounded-3 p-1 bg-white d-flex flex-column">

                    <!-- View Mode Selector -->
                    <div class="d-flex justify-content-center align-items-center gap-2 mb-1 text-muted" style="font-size: 0.75rem;">
                        <div class="form-check form-check-inline">
                            <input class="form-check-input small-radio" type="radio" name="viewMode"
                                @onchange="@(() => selectedView = "Desktop")"
                                checked="@("Desktop" == selectedView)" />
                            <label class="form-check-label">Desktop</label>
                        </div>
                        <div class="form-check form-check-inline ms-3">
                            <input class="form-check-input small-radio" type="radio" name="viewMode"
                                   @onchange="@(() => selectedView = "Mobile")"
                                   checked="@("Mobile" == selectedView)" />
                            <label class="form-check-label">Mobile</label>
                        </div>
                    </div>

                    <!-- Canvas Header -->
                    <div class="text-center text-muted fw-semibold mb-1" style="font-size: 0.8rem;">
                        Canvas (@selectedView view)
                    </div>

                    <!-- Canvas Body -->
                    <div class="flex-grow-1 overflow-auto">
                        <CanvasPanel CanvasControls="@canvasControls"
                                     AvailableControls="@availableControls"
                                     SelectedControl="@selectedControl"
                                     OnSelectControl="@HandleControlSelected"
                                     ViewMode="@selectedView" />


                    </div>
                </div>
            </div>

            <!-- Properties Panel -->
            <div class="col-12 col-md-3 p-2 properties-mobile-panel">
                <div class="h-100 border rounded-3 p-3 bg-light d-flex flex-column">
                    <div class="text-center text-muted small fw-semibold mb-3">Properties</div>
                    <div class="flex-grow-1 overflow-auto">
                        <PropertiesPanel SelectedControl="@selectedControl"
                                         OnControlChanged="@(() => StateHasChanged())" />
                    </div>
                </div>
            </div>
        </div>
        @if (isSaving || isLoading)
        {
            <div class="overlay">
                <div class="spinner-border text-primary" role="status"></div>
                <div class="mt-2 small text-muted">Loading...</div>
            </div>
        }

        @if (!string.IsNullOrEmpty(saveStatus))
        {
            <div class="overlay d-flex justify-content-center align-items-center">
                <div class="@saveStatusClass alert-box text-center">
                    @saveStatus
                </div>
            </div>
        }
    </div>
</div>

@if (showLoadModal)
{
    <div class="modal-overlay">
        <div class="modal-content-box p-3">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="m-0">Load Screen</h5>
                <button class="btn btn-sm btn-danger" @onclick="() => showLoadModal = false">✖</button>
            </div>

            <!-- Scrollable table area -->
            <div style="max-height: 300px; overflow-y: auto;">
                <table class="table table-sm table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Name</th>
                            <th>Created At</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var screen in savedScreens)
                        {
                            <tr>
                                <td>@screen.Name</td>
                                <td>@screen.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                <td class="text-center">
                                    <button class="btn btn-sm btn-outline-primary" @onclick="() => LoadScreen(screen.Id)">
                                        Choose
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}




