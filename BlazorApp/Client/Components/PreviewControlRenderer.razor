<div class="@GetWrapperClass()">
    @switch (Control.Type)
    {
        case "TextInput":
            <div class="mb-3">
                <label class="control-label">@Control.Label</label>
                <input class="@GetInputClass()" type="text" placeholder="@Control.Placeholder" value="@Control.DefaultValue" />
            </div>
            break;

        case "NumberInput":
            <div class="mb-3">
                <label class="control-label">@Control.Label</label>
                <input class="@GetInputClass()" type="number" placeholder="@Control.Placeholder" value="@Control.DefaultValue" />
            </div>
            break;

        case "Dropdown":
            <div class="mb-3">
                <label class="control-label">@Control.Label</label>
                <select class="@GetInputClass()">
                    <option disabled selected>@Control.Placeholder</option>
                    @foreach (var option in Control.Options.Where(o => !string.IsNullOrWhiteSpace(o)))
                    {
                        <option>@option</option>
                    }
                </select>
            </div>
            break;

        case "Checkbox":
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox"
                       checked="@("true".Equals(Control.DefaultValue, StringComparison.OrdinalIgnoreCase))"
                       id="chk_@Control.Id" />
                <label class="form-check-label ms-1" for="chk_@Control.Id">@Control.Label</label>
            </div>
            break;

        case "DatetimePicker":
            <div class="mb-3">
                <label class="control-label">@Control.Label</label>
                <input class="@GetInputClass()" type="datetime-local" value="@Control.DefaultValue" />
            </div>
            break;

        case "Button":
            <button class="btn btn-primary @GetButtonClass()">
                @(!string.IsNullOrWhiteSpace(Control.DefaultValue) ? Control.DefaultValue : Control.Label)
            </button>
            break;
    }
</div>