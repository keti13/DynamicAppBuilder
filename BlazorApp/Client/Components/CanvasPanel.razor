<div class="canvas-panel">
    <h5>Canvas (@ViewMode)</h5>

    <div id="canvas-dropzone" class="canvas-dropzone"
         ondragover="event.preventDefault(); event.dataTransfer.dropEffect='copy'"
         ondragenter="event.preventDefault(); this.classList.add('drop-active')"
         ondragleave="this.classList.remove('drop-active')"
         @ondrop="HandleDrop">

        @if (CanvasControls == null || CanvasControls.Count == 0)
        {
            <p class="text-muted text-center">Drop a control here to start building</p>
        }
        else
        {
            @foreach (var control in CanvasControls)
            {
                <div class="control-item"
                     style="position: absolute; left: @(control.X)px; top: @(control.Y)px;"
                     @onclick="() => HandleControlSelect(control)">
                    <div class="p-2 border rounded bg-white">
                        <strong>@control.Label</strong> (@control.Type)
                    </div>
                </div>
            }
        }
    </div>
</div>

<style>
    .canvas-dropzone {
        position: relative;
        min-height: 300px;
        border: 2px dashed #ccc;
        border-radius: 5px;
        padding: 10px;
        background-color: #f9f9f9;
        transition: all 0.3s ease;
    }

    .canvas-dropzone:hover {
        border-color: #999;
        background-color: #f5f5f5;
    }

    .drop-active {
        border-color: #007bff;
        background-color: #e8f4ff;
    }

    .control-item {
        cursor: move;
        z-index: 10;
    }
</style>